{
  "description": "`PieChart` is a circular graphic that is divided into slices to illustrate proportions or percentages.",
  "methods": [
    {
      "name": "onMouseEnterSlice",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        },
        {
          "name": "d",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "onMouseMoveSlice",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        },
        {
          "name": "d",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "onMouseLeaveSlice",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        },
        {
          "name": "d",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "onMouseEnterLine",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        },
        {
          "name": "d",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "onMouseMoveLine",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        },
        {
          "name": "d",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "onMouseLeaveLine",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        },
        {
          "name": "d",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "renderMarkerLine",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "pathData",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "renderCenterLabel",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "center",
          "type": null
        }
      ],
      "returns": null
    }
  ],
  "props": {
    "data": {
      "type": {
        "name": "array"
      },
      "required": true,
      "description": "Array of data to plot with pie chart."
    },
    "getValue": {
      "type": {
        "name": "custom",
        "raw": "CustomPropTypes.getter"
      },
      "required": false,
      "description": "Accessor for getting the values plotted on the pie chart.\nIf not provided, just uses the value itself at given index.",
      "defaultValue": {
        "value": "null",
        "computed": false
      }
    },
    "total": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "Total expected sum of all the pie slice values.\nIf provided && slices don't add up to total, an \"empty\" slice will be rendered for the rest\nIf not provided, will be the sum of all values (ie. all values will always add up to 100%)"
    },
    "width": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "Optional width of the SVG\nif not passed in and height is passed in, same # is used for both (ie. width=100 means height=100 also)\nif neither is passed, but radius is, radius+margins is used\nif neither is passed, and radius isn't either, 150 is used"
    },
    "height": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "Optional height of the SVG\nif not passed in and width is passed in, same # is used for both (ie. width=100 means height=100 also)\nif neither is passed, but radius is, radius+margins is used\nif neither is passed, and radius isn't either, 150 is used"
    },
    "radius": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "Optional radius of the pie chart, inferred from margin/width/height if not provided."
    },
    "marginTop": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "",
      "defaultValue": {
        "value": "0",
        "computed": false
      }
    },
    "marginBottom": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "",
      "defaultValue": {
        "value": "0",
        "computed": false
      }
    },
    "marginLeft": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "",
      "defaultValue": {
        "value": "0",
        "computed": false
      }
    },
    "marginRight": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "",
      "defaultValue": {
        "value": "0",
        "computed": false
      }
    },
    "holeRadius": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "Optional radius of the \"donut hole\" circle drawn on top of the pie chart to turn it into a donut chart."
    },
    "centerLabel": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Optional label text to display in the middle of the pie/donut."
    },
    "centerLabelClassName": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Class attribute to be applied to center label.",
      "defaultValue": {
        "value": "\"\"",
        "computed": false
      }
    },
    "centerLabelStyle": {
      "type": {
        "name": "object"
      },
      "required": false,
      "description": "Inline style object to be applied to center label.",
      "defaultValue": {
        "value": "{}",
        "computed": false
      }
    },
    "pieSliceClassName": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "string"
          },
          {
            "name": "func"
          }
        ]
      },
      "required": false,
      "description": "Class attribute to be applied to each pie slice,\nor accessor function which returns a class.",
      "defaultValue": {
        "value": "\"\"",
        "computed": false
      }
    },
    "markerLineValue": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "Value for where to place markerline."
    },
    "markerLineClassName": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Class attribute to be applied to marker line.",
      "defaultValue": {
        "value": "\"\"",
        "computed": false
      }
    },
    "markerLineStyle": {
      "type": {
        "name": "object"
      },
      "required": false,
      "description": "Inline style object to be applied to marker line.",
      "defaultValue": {
        "value": "{}",
        "computed": false
      }
    },
    "markerLineOverhangInner": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "Number of pixels marker line hangs inside the pie chart.",
      "defaultValue": {
        "value": "2",
        "computed": false
      }
    },
    "markerLineOverhangOuter": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "Number of pixels marker line hangs outside the pie chart.",
      "defaultValue": {
        "value": "2",
        "computed": false
      }
    },
    "onMouseEnterLine": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "`mouseenter` event handler callback, called when user's mouse enters the marker line."
    },
    "onMouseMoveLine": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "`mousemove` event handler callback, called when user's mouse moves within the marker line."
    },
    "onMouseLeaveLine": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "`mouseleave` event handler callback, called when user's mouse leaves the marker line."
    },
    "onMouseEnterSlice": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "`mouseenter` event handler callback, called when user's mouse enters a pie slice."
    },
    "onMouseMoveSlice": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "`mousemove` event handler callback, called when user's mouse moves within a pie slice."
    },
    "onMouseLeaveSlice": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "`mouseleave` event handler callback, called when user's mouse leaves a pie slice."
    }
  }
}